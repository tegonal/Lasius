{
  "actions": {
    "back": "Back",
    "cancel": "Cancel",
    "close": "Close",
    "confirm": "Confirm",
    "finish": "Finish",
    "next": "Next",
    "remove": "Remove",
    "saving": "Saving..."
  },
  "clear": "Clear",
  "integrations": {
    "actions": {
      "addIntegration": "Add Integration"
    },
    "configurations": "Configurations",
    "configureDescription": "Use the Add Integration button to set up a new integration. After creating a configuration, map your external projects to Lasius projects to enable issue imports.",
    "description": "Connect Lasius with external issue tracking systems like GitHub, GitLab, Jira, and Plane. Imported issues become available as tags when booking time in mapped projects, allowing you to track time directly on your issues.",
    "issueTrackers": "Issue Trackers",
    "title": "Integrations"
  },
  "issueImporters": {
    "actions": {
      "create": "Create",
      "delete": "Delete",
      "deleteDisabled": "Cannot delete: remove all project mappings first",
      "edit": "Edit",
      "update": "Update",
      "viewInfo": "View configuration info",
      "viewMappings": "View project mappings"
    },
    "checkInterval": "Check Interval",
    "checkIntervalHelp": "How often to check for new issues",
    "configListItem": {
      "project": "project",
      "projectCount_one": "{{count}} project",
      "projectCount_other": "{{count}} projects",
      "projects": "projects",
      "usedBy_one": "Used by {{count}} {{noun}}",
      "usedBy_other": "Used by {{count}} {{noun}}"
    },
    "descriptions": {
      "create": "Configure a new issue importer integration to sync issues from your project management tool.",
      "edit": "Update the configuration for this issue importer integration."
    },
    "emptyState": {
      "message": "No issue importer configurations yet"
    },
    "errors": {
      "invalidMappingData": "",
      "mappingRemoveFailed": "Failed to remove project mapping",
      "mappingSaveFailed": "Failed to save project mappings",
      "saveFailed": "Failed to save configuration"
    },
    "fields": {
      "accessToken": "Access Token",
      "accessTokenEdit": "Access Token (leave empty to keep current)",
      "apiKey": "API Key",
      "apiKeyEdit": "API Key (leave empty to keep current)",
      "baseUrl": "Base URL",
      "baseUrlPlaceholder": {
        "github": "https://api.github.com",
        "gitlab": "https://gitlab.company.com",
        "jira": "https://company.atlassian.net",
        "plane": "https://plane.company.com"
      },
      "consumerKey": "OAuth Consumer Key",
      "consumerKeyEdit": "Consumer Key (leave empty to keep current)",
      "name": "Configuration Name",
      "namePlaceholder": {
        "github": "e.g., Company GitHub",
        "gitlab": "e.g., Company GitLab",
        "jira": "e.g., Company Jira",
        "plane": "e.g., Company Plane"
      },
      "oauthAccessToken": "OAuth Access Token",
      "privateKey": "OAuth Private Key",
      "privateKeyEdit": "OAuth Private Key (leave empty to keep current)",
      "resourceOwner": "Resource Owner",
      "resourceOwnerHelp": "Select the GitHub user or organization that owns the repositories you want to access.",
      "resourceOwnerLoading": "Loading organizations...",
      "resourceOwnerNoResults": "No organizations found",
      "resourceOwnerPlaceholder": "Enter access token above to load organizations",
      "resourceOwnerSelect": "Select an organization"
    },
    "github": {
      "instructions": {
        "content": "<0><1>Verify your email address on GitHub</1><1>Go to Settings → Developer settings → Personal access tokens → Fine-grained tokens</1><1>Click \"Generate new token\"</1><1>Enter a token name and select an expiration date</1><1>Choose a resource owner (your user account or an organization you have access to)</1><1>Select repository access (all repositories or only select repositories)</1><1>Under Repository permissions, set <2>Issues</2> to \"Read-only\" and <2>Metadata</2> to \"Read-only\"</1><1>Click \"Generate token\" and copy it immediately</1></0><3>Important: Fine-grained tokens are required (not classic tokens). The resource owner you select determines which repositories you can access. For organization repositories, you may need organization owner approval. Make sure to select the same resource owner in the configuration form above.</3>",
        "title": "How to create GitHub credentials:"
      }
    },
    "gitlab": {
      "instructions": {
        "content": "<0><1>On the left sidebar, select your avatar</1><1>Select \"Edit profile\"</1><1>Select \"Personal access tokens\"</1><1>Select \"Add new token\"</1><1>Enter a token name and optional description</1><1>Set an expiration date</1><1>Select the <2>read_api</2> scope (grants read access to the API, including all groups and projects)</1><1>Click \"Create personal access token\"</1><1>Copy the token immediately and store it securely</1></0><3>Note: The token will only be shown once. Use <2>read_api</2> for read-only access, or <2>api</2> for full read/write access if needed.</3>",
        "title": "How to create GitLab credentials:"
      }
    },
    "headers": {
      "baseUrl": "Base URL",
      "name": "Name",
      "projects": "Projects",
      "type": "Type"
    },
    "healthStatus": {
      "degraded": "Degraded",
      "failed": "Failed",
      "healthy": "Healthy",
      "unknown": "Unknown"
    },
    "info": {
      "auditInfo": "Audit Information",
      "baseUrl": "Base URL",
      "basicInfo": "Basic Information",
      "checkFrequency": "Check Frequency",
      "checkFrequencyValue": "{{minutes}} minutes",
      "createdAt": "Created",
      "createdBy": "Created By",
      "healthStatus": "Health Status",
      "issuesSynced": "Issues",
      "lastChecked": "Last checked: {{date}}",
      "lastSuccessfulSync": "Last Successful Sync",
      "lastSync": "Last Sync",
      "loadError": "Failed to load configuration details. Please try again.",
      "name": "Name",
      "nextScheduledSync": "Next Scheduled Sync",
      "projectName": "Project",
      "projectStats": "Project Statistics",
      "title": "Configuration Info",
      "totalIssuesSynced": "Total Issues Synced",
      "totalProjectsMapped": "Projects Mapped",
      "type": "Type",
      "updatedAt": "Last Updated",
      "updatedBy": "Updated By"
    },
    "jira": {
      "instructions": {
        "content": "<0><1>Generate RSA key pair using OpenSSL: <2>openssl genrsa -out jira_privatekey.pem 1024</2></1><1>Extract public key: <2>openssl rsa -in jira_privatekey.pem -pubout -out jira_publickey.pem</2></1><1>In Jira: Click Settings (cog icon) → Applications → Application links</1><1>Enter any URL (e.g., <2>http://localhost</2>) and click \"Create new link\"</1><1>Ignore the \"No response was received\" warning and click \"Continue\"</1><1>Enter your Application Name and select \"Create incoming link\"</1><1>In the incoming authentication form, enter your Consumer Key, paste the public key content from <2>jira_publickey.pem</2></1><1>Complete the OAuth 1.0a authorization flow using your consumer key and private key to obtain the access token</1></0><3>Note: This uses OAuth 1.0a with RSA-SHA1 signing. Primarily for Jira Server/Data Center. For Jira Cloud, consider using API tokens or OAuth 2.0 for new integrations.</3>",
        "title": "How to create Jira credentials:"
      }
    },
    "plane": {
      "instructions": {
        "content": "<0><1>Log into your Plane account or self-hosted instance</1><1>Go to Profile Settings</1><1>Select \"Personal Access Tokens\" from the list of tabs</1><1>Click \"Add personal access token\"</1><1>Enter a token name and optional description</1><1>Click \"Generate\" or \"Create\"</1><1>Copy the generated token immediately and store it securely</1></0><3>Note: The token will only be shown once. The token is passed as the value of the <2>X-API-Key</2> header in API requests.</3>",
        "title": "How to create Plane credentials:"
      }
    },
    "projectMappings": {
      "title": "{{platform}} Project Mappings"
    },
    "success": {
      "configDeleted": "Configuration deleted successfully",
      "configSaved": "Configuration saved successfully",
      "mappingRemoved": "Project mapping removed successfully",
      "mappingSaved": "Project mapping saved successfully"
    },
    "tagConfiguration": {
      "description": "Configure which fields from external issues should be used to create tags in Lasius.",
      "issueState": {
        "all": "All issues",
        "closed": "Closed issues only",
        "open": "Open issues only"
      },
      "issueStateLabel": "Issue state to import",
      "tagFieldsLabel": "Tag fields to import",
      "tagFieldsPlaceholder": "Select fields...",
      "useAssignees": "Use assignees as tags",
      "useLabels": "Use labels as tags",
      "useMilestone": "Use milestone as tag",
      "useTitle": "Use issue title as tag"
    },
    "testConnection": {
      "editModeNote": "Note: Enter your credentials above to test the connection. Leave empty to keep existing credentials when saving.",
      "failed": "Connection test failed. Please check your credentials and URL.",
      "resourceOwnerRequired": "Please select a resource owner before testing the connection.",
      "success": "Connection test successful",
      "test": "Test Connection",
      "testing": "Testing connection..."
    },
    "titles": {
      "create": "Create Integration",
      "edit": "Edit Integration"
    },
    "wizard": {
      "config": {
        "description": "Enter your connection details to connect to {{platform}}.",
        "title": "Configure {{platform}}"
      },
      "projects": {
        "addMapping": "Add mapping",
        "changeMapping": "Change mapping",
        "confirmRemoveMessage": "Are you sure you want to remove this project mapping? Issues will stop syncing, but existing tags will remain.",
        "confirmRemoveTitle": "Remove Project Mapping",
        "confirmRemoveWarning": "This action cannot be undone.",
        "createMapping": "Create Project Mapping",
        "editMapping": "Edit Project Mapping",
        "externalProject": "External Project",
        "filterPlaceholder": "Filter projects...",
        "lasiusProject": "Lasius Project",
        "loadError": "Failed to load projects. Please try again.",
        "loading": "Loading projects from {{platform}}...",
        "mappingDescription": "Link this external project to a Lasius project to automatically sync issues as time tracking tags.",
        "mappingDescription_one": "Found {{count}} projects from {{platform}}. Map them to your Lasius projects to import issues. {{mapped}} of {{total}} mapped.",
        "mappingDescription_other": "Found {{count}} projects from {{platform}}. Map them to your Lasius projects to import issues. {{mapped}} of {{total}} mapped.",
        "mappingDescription_plural_one": "Found {{count}} projects from {{platform}}. Map them to your Lasius projects to import issues. {{mapped}} of {{total}} mapped.",
        "mappingDescription_plural_other": "Found {{count}} projects from {{platform}}. Map them to your Lasius projects to import issues. {{mapped}} of {{total}} mapped.",
        "noProjects": "No projects found in {{platform}}",
        "notMapped": "Not mapped",
        "orphanedProject": "Project no longer available",
        "removeMapping": "Remove mapping",
        "selectMappingDescription": "Choose which Lasius project should be linked to this external project.",
        "title": "Map External Projects"
      },
      "selectPlatform": {
        "description": "Choose which issue tracking platform you want to integrate with Lasius.",
        "githubDescription": "Import issues and pull requests from GitHub repositories",
        "gitlabDescription": "Import issues and merge requests from GitLab projects",
        "jiraDescription": "Import issues and epics from Jira boards",
        "planeDescription": "Import issues and tasks from Plane workspaces",
        "title": "Select Issue Tracker"
      },
      "steps": {
        "configure": "Configure",
        "platform": "Platform",
        "projects": "Projects",
        "test": "Test"
      },
      "test": {
        "error": "Connection failed",
        "retry": "Retry Connection Test",
        "success": "Connection successful!",
        "successDescription": "Proceeding to next step...",
        "testing": "Testing connection..."
      }
    }
  },
  "projects": {
    "label": "Project"
  }
}
